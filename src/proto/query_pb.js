// source: query.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
goog.exportSymbol('proto.stargate.AlreadyExists', null, global);
goog.exportSymbol('proto.stargate.Batch', null, global);
goog.exportSymbol('proto.stargate.Batch.Type', null, global);
goog.exportSymbol('proto.stargate.BatchParameters', null, global);
goog.exportSymbol('proto.stargate.BatchQuery', null, global);
goog.exportSymbol('proto.stargate.CasWriteUnknown', null, global);
goog.exportSymbol('proto.stargate.Collection', null, global);
goog.exportSymbol('proto.stargate.ColumnSpec', null, global);
goog.exportSymbol('proto.stargate.Consistency', null, global);
goog.exportSymbol('proto.stargate.ConsistencyValue', null, global);
goog.exportSymbol('proto.stargate.Decimal', null, global);
goog.exportSymbol('proto.stargate.FunctionFailure', null, global);
goog.exportSymbol('proto.stargate.Inet', null, global);
goog.exportSymbol('proto.stargate.Query', null, global);
goog.exportSymbol('proto.stargate.QueryParameters', null, global);
goog.exportSymbol('proto.stargate.ReadFailure', null, global);
goog.exportSymbol('proto.stargate.ReadTimeout', null, global);
goog.exportSymbol('proto.stargate.Response', null, global);
goog.exportSymbol('proto.stargate.Response.ResultCase', null, global);
goog.exportSymbol('proto.stargate.ResultSet', null, global);
goog.exportSymbol('proto.stargate.Row', null, global);
goog.exportSymbol('proto.stargate.SchemaChange', null, global);
goog.exportSymbol('proto.stargate.SchemaChange.Target', null, global);
goog.exportSymbol('proto.stargate.SchemaChange.Type', null, global);
goog.exportSymbol('proto.stargate.Traces', null, global);
goog.exportSymbol('proto.stargate.Traces.Event', null, global);
goog.exportSymbol('proto.stargate.TypeSpec', null, global);
goog.exportSymbol('proto.stargate.TypeSpec.Basic', null, global);
goog.exportSymbol('proto.stargate.TypeSpec.List', null, global);
goog.exportSymbol('proto.stargate.TypeSpec.Map', null, global);
goog.exportSymbol('proto.stargate.TypeSpec.Set', null, global);
goog.exportSymbol('proto.stargate.TypeSpec.SpecCase', null, global);
goog.exportSymbol('proto.stargate.TypeSpec.Tuple', null, global);
goog.exportSymbol('proto.stargate.TypeSpec.Udt', null, global);
goog.exportSymbol('proto.stargate.UdtValue', null, global);
goog.exportSymbol('proto.stargate.Unavailable', null, global);
goog.exportSymbol('proto.stargate.Uuid', null, global);
goog.exportSymbol('proto.stargate.Value', null, global);
goog.exportSymbol('proto.stargate.Value.InnerCase', null, global);
goog.exportSymbol('proto.stargate.Value.Null', null, global);
goog.exportSymbol('proto.stargate.Value.Unset', null, global);
goog.exportSymbol('proto.stargate.Values', null, global);
goog.exportSymbol('proto.stargate.Varint', null, global);
goog.exportSymbol('proto.stargate.WriteFailure', null, global);
goog.exportSymbol('proto.stargate.WriteTimeout', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.ConsistencyValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stargate.ConsistencyValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.ConsistencyValue.displayName = 'proto.stargate.ConsistencyValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.Collection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.stargate.Collection.repeatedFields_, null);
};
goog.inherits(proto.stargate.Collection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.Collection.displayName = 'proto.stargate.Collection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.UdtValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stargate.UdtValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.UdtValue.displayName = 'proto.stargate.UdtValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.Uuid = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stargate.Uuid, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.Uuid.displayName = 'proto.stargate.Uuid';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.Inet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stargate.Inet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.Inet.displayName = 'proto.stargate.Inet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.Varint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stargate.Varint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.Varint.displayName = 'proto.stargate.Varint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.Decimal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stargate.Decimal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.Decimal.displayName = 'proto.stargate.Decimal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.Value = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.stargate.Value.oneofGroups_);
};
goog.inherits(proto.stargate.Value, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.Value.displayName = 'proto.stargate.Value';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.Value.Null = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stargate.Value.Null, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.Value.Null.displayName = 'proto.stargate.Value.Null';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.Value.Unset = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stargate.Value.Unset, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.Value.Unset.displayName = 'proto.stargate.Value.Unset';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.Query = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stargate.Query, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.Query.displayName = 'proto.stargate.Query';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.Values = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.stargate.Values.repeatedFields_, null);
};
goog.inherits(proto.stargate.Values, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.Values.displayName = 'proto.stargate.Values';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.QueryParameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stargate.QueryParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.QueryParameters.displayName = 'proto.stargate.QueryParameters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.TypeSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.stargate.TypeSpec.oneofGroups_);
};
goog.inherits(proto.stargate.TypeSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.TypeSpec.displayName = 'proto.stargate.TypeSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.TypeSpec.Map = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stargate.TypeSpec.Map, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.TypeSpec.Map.displayName = 'proto.stargate.TypeSpec.Map';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.TypeSpec.List = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stargate.TypeSpec.List, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.TypeSpec.List.displayName = 'proto.stargate.TypeSpec.List';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.TypeSpec.Set = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stargate.TypeSpec.Set, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.TypeSpec.Set.displayName = 'proto.stargate.TypeSpec.Set';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.TypeSpec.Udt = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stargate.TypeSpec.Udt, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.TypeSpec.Udt.displayName = 'proto.stargate.TypeSpec.Udt';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.TypeSpec.Tuple = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.stargate.TypeSpec.Tuple.repeatedFields_, null);
};
goog.inherits(proto.stargate.TypeSpec.Tuple, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.TypeSpec.Tuple.displayName = 'proto.stargate.TypeSpec.Tuple';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.ColumnSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stargate.ColumnSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.ColumnSpec.displayName = 'proto.stargate.ColumnSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.Traces = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.stargate.Traces.repeatedFields_, null);
};
goog.inherits(proto.stargate.Traces, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.Traces.displayName = 'proto.stargate.Traces';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.Traces.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stargate.Traces.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.Traces.Event.displayName = 'proto.stargate.Traces.Event';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.SchemaChange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.stargate.SchemaChange.repeatedFields_, null);
};
goog.inherits(proto.stargate.SchemaChange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.SchemaChange.displayName = 'proto.stargate.SchemaChange';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.stargate.Response.repeatedFields_, proto.stargate.Response.oneofGroups_);
};
goog.inherits(proto.stargate.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.Response.displayName = 'proto.stargate.Response';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.Unavailable = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stargate.Unavailable, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.Unavailable.displayName = 'proto.stargate.Unavailable';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.WriteTimeout = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stargate.WriteTimeout, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.WriteTimeout.displayName = 'proto.stargate.WriteTimeout';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.ReadTimeout = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stargate.ReadTimeout, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.ReadTimeout.displayName = 'proto.stargate.ReadTimeout';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.ReadFailure = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stargate.ReadFailure, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.ReadFailure.displayName = 'proto.stargate.ReadFailure';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.FunctionFailure = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.stargate.FunctionFailure.repeatedFields_, null);
};
goog.inherits(proto.stargate.FunctionFailure, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.FunctionFailure.displayName = 'proto.stargate.FunctionFailure';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.WriteFailure = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stargate.WriteFailure, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.WriteFailure.displayName = 'proto.stargate.WriteFailure';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.AlreadyExists = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stargate.AlreadyExists, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.AlreadyExists.displayName = 'proto.stargate.AlreadyExists';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.CasWriteUnknown = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stargate.CasWriteUnknown, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.CasWriteUnknown.displayName = 'proto.stargate.CasWriteUnknown';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.Row = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.stargate.Row.repeatedFields_, null);
};
goog.inherits(proto.stargate.Row, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.Row.displayName = 'proto.stargate.Row';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.ResultSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.stargate.ResultSet.repeatedFields_, null);
};
goog.inherits(proto.stargate.ResultSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.ResultSet.displayName = 'proto.stargate.ResultSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.BatchQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stargate.BatchQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.BatchQuery.displayName = 'proto.stargate.BatchQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.BatchParameters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.stargate.BatchParameters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.BatchParameters.displayName = 'proto.stargate.BatchParameters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.stargate.Batch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.stargate.Batch.repeatedFields_, null);
};
goog.inherits(proto.stargate.Batch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.stargate.Batch.displayName = 'proto.stargate.Batch';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.ConsistencyValue.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.ConsistencyValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.ConsistencyValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.ConsistencyValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.ConsistencyValue}
 */
proto.stargate.ConsistencyValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.ConsistencyValue;
  return proto.stargate.ConsistencyValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.ConsistencyValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.ConsistencyValue}
 */
proto.stargate.ConsistencyValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.stargate.Consistency} */ (reader.readEnum());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.ConsistencyValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.ConsistencyValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.ConsistencyValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.ConsistencyValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional Consistency value = 1;
 * @return {!proto.stargate.Consistency}
 */
proto.stargate.ConsistencyValue.prototype.getValue = function() {
  return /** @type {!proto.stargate.Consistency} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.stargate.Consistency} value
 * @return {!proto.stargate.ConsistencyValue} returns this
 */
proto.stargate.ConsistencyValue.prototype.setValue = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.stargate.Collection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.Collection.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.Collection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.Collection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Collection.toObject = function(includeInstance, msg) {
  var f, obj = {
    elementsList: jspb.Message.toObjectList(msg.getElementsList(),
    proto.stargate.Value.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.Collection}
 */
proto.stargate.Collection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.Collection;
  return proto.stargate.Collection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.Collection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.Collection}
 */
proto.stargate.Collection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.stargate.Value;
      reader.readMessage(value,proto.stargate.Value.deserializeBinaryFromReader);
      msg.addElements(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.Collection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.Collection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.Collection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Collection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getElementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.stargate.Value.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Value elements = 1;
 * @return {!Array<!proto.stargate.Value>}
 */
proto.stargate.Collection.prototype.getElementsList = function() {
  return /** @type{!Array<!proto.stargate.Value>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.stargate.Value, 1));
};


/**
 * @param {!Array<!proto.stargate.Value>} value
 * @return {!proto.stargate.Collection} returns this
*/
proto.stargate.Collection.prototype.setElementsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.stargate.Value=} opt_value
 * @param {number=} opt_index
 * @return {!proto.stargate.Value}
 */
proto.stargate.Collection.prototype.addElements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.stargate.Value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.stargate.Collection} returns this
 */
proto.stargate.Collection.prototype.clearElementsList = function() {
  return this.setElementsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.UdtValue.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.UdtValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.UdtValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.UdtValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldsMap: (f = msg.getFieldsMap()) ? f.toObject(includeInstance, proto.stargate.Value.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.UdtValue}
 */
proto.stargate.UdtValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.UdtValue;
  return proto.stargate.UdtValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.UdtValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.UdtValue}
 */
proto.stargate.UdtValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getFieldsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.stargate.Value.deserializeBinaryFromReader, "", new proto.stargate.Value());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.UdtValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.UdtValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.UdtValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.UdtValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.stargate.Value.serializeBinaryToWriter);
  }
};


/**
 * map<string, Value> fields = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.stargate.Value>}
 */
proto.stargate.UdtValue.prototype.getFieldsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.stargate.Value>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.stargate.Value));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.stargate.UdtValue} returns this
 */
proto.stargate.UdtValue.prototype.clearFieldsMap = function() {
  this.getFieldsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.Uuid.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.Uuid.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.Uuid} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Uuid.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: msg.getValue_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.Uuid}
 */
proto.stargate.Uuid.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.Uuid;
  return proto.stargate.Uuid.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.Uuid} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.Uuid}
 */
proto.stargate.Uuid.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.Uuid.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.Uuid.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.Uuid} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Uuid.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes value = 1;
 * @return {!(string|Uint8Array)}
 */
proto.stargate.Uuid.prototype.getValue = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes value = 1;
 * This is a type-conversion wrapper around `getValue()`
 * @return {string}
 */
proto.stargate.Uuid.prototype.getValue_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValue()));
};


/**
 * optional bytes value = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValue()`
 * @return {!Uint8Array}
 */
proto.stargate.Uuid.prototype.getValue_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValue()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.stargate.Uuid} returns this
 */
proto.stargate.Uuid.prototype.setValue = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.Inet.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.Inet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.Inet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Inet.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: msg.getValue_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.Inet}
 */
proto.stargate.Inet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.Inet;
  return proto.stargate.Inet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.Inet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.Inet}
 */
proto.stargate.Inet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.Inet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.Inet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.Inet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Inet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes value = 1;
 * @return {!(string|Uint8Array)}
 */
proto.stargate.Inet.prototype.getValue = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes value = 1;
 * This is a type-conversion wrapper around `getValue()`
 * @return {string}
 */
proto.stargate.Inet.prototype.getValue_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValue()));
};


/**
 * optional bytes value = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValue()`
 * @return {!Uint8Array}
 */
proto.stargate.Inet.prototype.getValue_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValue()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.stargate.Inet} returns this
 */
proto.stargate.Inet.prototype.setValue = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.Varint.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.Varint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.Varint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Varint.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: msg.getValue_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.Varint}
 */
proto.stargate.Varint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.Varint;
  return proto.stargate.Varint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.Varint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.Varint}
 */
proto.stargate.Varint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.Varint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.Varint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.Varint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Varint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes value = 1;
 * @return {!(string|Uint8Array)}
 */
proto.stargate.Varint.prototype.getValue = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes value = 1;
 * This is a type-conversion wrapper around `getValue()`
 * @return {string}
 */
proto.stargate.Varint.prototype.getValue_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValue()));
};


/**
 * optional bytes value = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValue()`
 * @return {!Uint8Array}
 */
proto.stargate.Varint.prototype.getValue_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValue()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.stargate.Varint} returns this
 */
proto.stargate.Varint.prototype.setValue = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.Decimal.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.Decimal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.Decimal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Decimal.toObject = function(includeInstance, msg) {
  var f, obj = {
    scale: jspb.Message.getFieldWithDefault(msg, 1, 0),
    value: msg.getValue_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.Decimal}
 */
proto.stargate.Decimal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.Decimal;
  return proto.stargate.Decimal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.Decimal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.Decimal}
 */
proto.stargate.Decimal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setScale(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.Decimal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.Decimal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.Decimal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Decimal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScale();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getValue_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional uint32 scale = 1;
 * @return {number}
 */
proto.stargate.Decimal.prototype.getScale = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.stargate.Decimal} returns this
 */
proto.stargate.Decimal.prototype.setScale = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bytes value = 3;
 * @return {!(string|Uint8Array)}
 */
proto.stargate.Decimal.prototype.getValue = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes value = 3;
 * This is a type-conversion wrapper around `getValue()`
 * @return {string}
 */
proto.stargate.Decimal.prototype.getValue_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getValue()));
};


/**
 * optional bytes value = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValue()`
 * @return {!Uint8Array}
 */
proto.stargate.Decimal.prototype.getValue_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getValue()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.stargate.Decimal} returns this
 */
proto.stargate.Decimal.prototype.setValue = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.stargate.Value.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]];

/**
 * @enum {number}
 */
proto.stargate.Value.InnerCase = {
  INNER_NOT_SET: 0,
  NULL: 1,
  UNSET: 2,
  INT: 3,
  FLOAT: 4,
  DOUBLE: 5,
  BOOLEAN: 6,
  STRING: 7,
  BYTES: 8,
  INET: 9,
  UUID: 10,
  DATE: 11,
  TIME: 12,
  COLLECTION: 13,
  UDT: 14,
  VARINT: 15,
  DECIMAL: 16
};

/**
 * @return {proto.stargate.Value.InnerCase}
 */
proto.stargate.Value.prototype.getInnerCase = function() {
  return /** @type {proto.stargate.Value.InnerCase} */(jspb.Message.computeOneofCase(this, proto.stargate.Value.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.Value.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.Value.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.Value} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Value.toObject = function(includeInstance, msg) {
  var f, obj = {
    pb_null: (f = msg.getNull()) && proto.stargate.Value.Null.toObject(includeInstance, f),
    unset: (f = msg.getUnset()) && proto.stargate.Value.Unset.toObject(includeInstance, f),
    pb_int: jspb.Message.getFieldWithDefault(msg, 3, 0),
    pb_float: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    pb_double: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    pb_boolean: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    string: jspb.Message.getFieldWithDefault(msg, 7, ""),
    bytes: msg.getBytes_asB64(),
    inet: (f = msg.getInet()) && proto.stargate.Inet.toObject(includeInstance, f),
    uuid: (f = msg.getUuid()) && proto.stargate.Uuid.toObject(includeInstance, f),
    date: jspb.Message.getFieldWithDefault(msg, 11, 0),
    time: jspb.Message.getFieldWithDefault(msg, 12, 0),
    collection: (f = msg.getCollection()) && proto.stargate.Collection.toObject(includeInstance, f),
    udt: (f = msg.getUdt()) && proto.stargate.UdtValue.toObject(includeInstance, f),
    varint: (f = msg.getVarint()) && proto.stargate.Varint.toObject(includeInstance, f),
    decimal: (f = msg.getDecimal()) && proto.stargate.Decimal.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.Value}
 */
proto.stargate.Value.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.Value;
  return proto.stargate.Value.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.Value} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.Value}
 */
proto.stargate.Value.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.stargate.Value.Null;
      reader.readMessage(value,proto.stargate.Value.Null.deserializeBinaryFromReader);
      msg.setNull(value);
      break;
    case 2:
      var value = new proto.stargate.Value.Unset;
      reader.readMessage(value,proto.stargate.Value.Unset.deserializeBinaryFromReader);
      msg.setUnset(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setInt(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFloat(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDouble(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBoolean(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setString(value);
      break;
    case 8:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBytes(value);
      break;
    case 9:
      var value = new proto.stargate.Inet;
      reader.readMessage(value,proto.stargate.Inet.deserializeBinaryFromReader);
      msg.setInet(value);
      break;
    case 10:
      var value = new proto.stargate.Uuid;
      reader.readMessage(value,proto.stargate.Uuid.deserializeBinaryFromReader);
      msg.setUuid(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDate(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTime(value);
      break;
    case 13:
      var value = new proto.stargate.Collection;
      reader.readMessage(value,proto.stargate.Collection.deserializeBinaryFromReader);
      msg.setCollection(value);
      break;
    case 14:
      var value = new proto.stargate.UdtValue;
      reader.readMessage(value,proto.stargate.UdtValue.deserializeBinaryFromReader);
      msg.setUdt(value);
      break;
    case 15:
      var value = new proto.stargate.Varint;
      reader.readMessage(value,proto.stargate.Varint.deserializeBinaryFromReader);
      msg.setVarint(value);
      break;
    case 16:
      var value = new proto.stargate.Decimal;
      reader.readMessage(value,proto.stargate.Decimal.deserializeBinaryFromReader);
      msg.setDecimal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.Value.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.Value.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.Value} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Value.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNull();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.stargate.Value.Null.serializeBinaryToWriter
    );
  }
  f = message.getUnset();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.stargate.Value.Unset.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeSint64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBytes(
      8,
      f
    );
  }
  f = message.getInet();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.stargate.Inet.serializeBinaryToWriter
    );
  }
  f = message.getUuid();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.stargate.Uuid.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getCollection();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.stargate.Collection.serializeBinaryToWriter
    );
  }
  f = message.getUdt();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.stargate.UdtValue.serializeBinaryToWriter
    );
  }
  f = message.getVarint();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.stargate.Varint.serializeBinaryToWriter
    );
  }
  f = message.getDecimal();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.stargate.Decimal.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.Value.Null.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.Value.Null.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.Value.Null} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Value.Null.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.Value.Null}
 */
proto.stargate.Value.Null.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.Value.Null;
  return proto.stargate.Value.Null.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.Value.Null} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.Value.Null}
 */
proto.stargate.Value.Null.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.Value.Null.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.Value.Null.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.Value.Null} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Value.Null.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.Value.Unset.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.Value.Unset.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.Value.Unset} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Value.Unset.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.Value.Unset}
 */
proto.stargate.Value.Unset.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.Value.Unset;
  return proto.stargate.Value.Unset.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.Value.Unset} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.Value.Unset}
 */
proto.stargate.Value.Unset.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.Value.Unset.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.Value.Unset.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.Value.Unset} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Value.Unset.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional Null null = 1;
 * @return {?proto.stargate.Value.Null}
 */
proto.stargate.Value.prototype.getNull = function() {
  return /** @type{?proto.stargate.Value.Null} */ (
    jspb.Message.getWrapperField(this, proto.stargate.Value.Null, 1));
};


/**
 * @param {?proto.stargate.Value.Null|undefined} value
 * @return {!proto.stargate.Value} returns this
*/
proto.stargate.Value.prototype.setNull = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.stargate.Value.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.Value} returns this
 */
proto.stargate.Value.prototype.clearNull = function() {
  return this.setNull(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.Value.prototype.hasNull = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Unset unset = 2;
 * @return {?proto.stargate.Value.Unset}
 */
proto.stargate.Value.prototype.getUnset = function() {
  return /** @type{?proto.stargate.Value.Unset} */ (
    jspb.Message.getWrapperField(this, proto.stargate.Value.Unset, 2));
};


/**
 * @param {?proto.stargate.Value.Unset|undefined} value
 * @return {!proto.stargate.Value} returns this
*/
proto.stargate.Value.prototype.setUnset = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.stargate.Value.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.Value} returns this
 */
proto.stargate.Value.prototype.clearUnset = function() {
  return this.setUnset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.Value.prototype.hasUnset = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional sint64 int = 3;
 * @return {number}
 */
proto.stargate.Value.prototype.getInt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.stargate.Value} returns this
 */
proto.stargate.Value.prototype.setInt = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.stargate.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.stargate.Value} returns this
 */
proto.stargate.Value.prototype.clearInt = function() {
  return jspb.Message.setOneofField(this, 3, proto.stargate.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.Value.prototype.hasInt = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional float float = 4;
 * @return {number}
 */
proto.stargate.Value.prototype.getFloat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.stargate.Value} returns this
 */
proto.stargate.Value.prototype.setFloat = function(value) {
  return jspb.Message.setOneofField(this, 4, proto.stargate.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.stargate.Value} returns this
 */
proto.stargate.Value.prototype.clearFloat = function() {
  return jspb.Message.setOneofField(this, 4, proto.stargate.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.Value.prototype.hasFloat = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double double = 5;
 * @return {number}
 */
proto.stargate.Value.prototype.getDouble = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.stargate.Value} returns this
 */
proto.stargate.Value.prototype.setDouble = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.stargate.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.stargate.Value} returns this
 */
proto.stargate.Value.prototype.clearDouble = function() {
  return jspb.Message.setOneofField(this, 5, proto.stargate.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.Value.prototype.hasDouble = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool boolean = 6;
 * @return {boolean}
 */
proto.stargate.Value.prototype.getBoolean = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.stargate.Value} returns this
 */
proto.stargate.Value.prototype.setBoolean = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.stargate.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.stargate.Value} returns this
 */
proto.stargate.Value.prototype.clearBoolean = function() {
  return jspb.Message.setOneofField(this, 6, proto.stargate.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.Value.prototype.hasBoolean = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string string = 7;
 * @return {string}
 */
proto.stargate.Value.prototype.getString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.stargate.Value} returns this
 */
proto.stargate.Value.prototype.setString = function(value) {
  return jspb.Message.setOneofField(this, 7, proto.stargate.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.stargate.Value} returns this
 */
proto.stargate.Value.prototype.clearString = function() {
  return jspb.Message.setOneofField(this, 7, proto.stargate.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.Value.prototype.hasString = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bytes bytes = 8;
 * @return {!(string|Uint8Array)}
 */
proto.stargate.Value.prototype.getBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * optional bytes bytes = 8;
 * This is a type-conversion wrapper around `getBytes()`
 * @return {string}
 */
proto.stargate.Value.prototype.getBytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBytes()));
};


/**
 * optional bytes bytes = 8;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBytes()`
 * @return {!Uint8Array}
 */
proto.stargate.Value.prototype.getBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.stargate.Value} returns this
 */
proto.stargate.Value.prototype.setBytes = function(value) {
  return jspb.Message.setOneofField(this, 8, proto.stargate.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.stargate.Value} returns this
 */
proto.stargate.Value.prototype.clearBytes = function() {
  return jspb.Message.setOneofField(this, 8, proto.stargate.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.Value.prototype.hasBytes = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Inet inet = 9;
 * @return {?proto.stargate.Inet}
 */
proto.stargate.Value.prototype.getInet = function() {
  return /** @type{?proto.stargate.Inet} */ (
    jspb.Message.getWrapperField(this, proto.stargate.Inet, 9));
};


/**
 * @param {?proto.stargate.Inet|undefined} value
 * @return {!proto.stargate.Value} returns this
*/
proto.stargate.Value.prototype.setInet = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.stargate.Value.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.Value} returns this
 */
proto.stargate.Value.prototype.clearInet = function() {
  return this.setInet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.Value.prototype.hasInet = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Uuid uuid = 10;
 * @return {?proto.stargate.Uuid}
 */
proto.stargate.Value.prototype.getUuid = function() {
  return /** @type{?proto.stargate.Uuid} */ (
    jspb.Message.getWrapperField(this, proto.stargate.Uuid, 10));
};


/**
 * @param {?proto.stargate.Uuid|undefined} value
 * @return {!proto.stargate.Value} returns this
*/
proto.stargate.Value.prototype.setUuid = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.stargate.Value.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.Value} returns this
 */
proto.stargate.Value.prototype.clearUuid = function() {
  return this.setUuid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.Value.prototype.hasUuid = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint32 date = 11;
 * @return {number}
 */
proto.stargate.Value.prototype.getDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.stargate.Value} returns this
 */
proto.stargate.Value.prototype.setDate = function(value) {
  return jspb.Message.setOneofField(this, 11, proto.stargate.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.stargate.Value} returns this
 */
proto.stargate.Value.prototype.clearDate = function() {
  return jspb.Message.setOneofField(this, 11, proto.stargate.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.Value.prototype.hasDate = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint64 time = 12;
 * @return {number}
 */
proto.stargate.Value.prototype.getTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.stargate.Value} returns this
 */
proto.stargate.Value.prototype.setTime = function(value) {
  return jspb.Message.setOneofField(this, 12, proto.stargate.Value.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.stargate.Value} returns this
 */
proto.stargate.Value.prototype.clearTime = function() {
  return jspb.Message.setOneofField(this, 12, proto.stargate.Value.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.Value.prototype.hasTime = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional Collection collection = 13;
 * @return {?proto.stargate.Collection}
 */
proto.stargate.Value.prototype.getCollection = function() {
  return /** @type{?proto.stargate.Collection} */ (
    jspb.Message.getWrapperField(this, proto.stargate.Collection, 13));
};


/**
 * @param {?proto.stargate.Collection|undefined} value
 * @return {!proto.stargate.Value} returns this
*/
proto.stargate.Value.prototype.setCollection = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.stargate.Value.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.Value} returns this
 */
proto.stargate.Value.prototype.clearCollection = function() {
  return this.setCollection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.Value.prototype.hasCollection = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional UdtValue udt = 14;
 * @return {?proto.stargate.UdtValue}
 */
proto.stargate.Value.prototype.getUdt = function() {
  return /** @type{?proto.stargate.UdtValue} */ (
    jspb.Message.getWrapperField(this, proto.stargate.UdtValue, 14));
};


/**
 * @param {?proto.stargate.UdtValue|undefined} value
 * @return {!proto.stargate.Value} returns this
*/
proto.stargate.Value.prototype.setUdt = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.stargate.Value.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.Value} returns this
 */
proto.stargate.Value.prototype.clearUdt = function() {
  return this.setUdt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.Value.prototype.hasUdt = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional Varint varint = 15;
 * @return {?proto.stargate.Varint}
 */
proto.stargate.Value.prototype.getVarint = function() {
  return /** @type{?proto.stargate.Varint} */ (
    jspb.Message.getWrapperField(this, proto.stargate.Varint, 15));
};


/**
 * @param {?proto.stargate.Varint|undefined} value
 * @return {!proto.stargate.Value} returns this
*/
proto.stargate.Value.prototype.setVarint = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.stargate.Value.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.Value} returns this
 */
proto.stargate.Value.prototype.clearVarint = function() {
  return this.setVarint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.Value.prototype.hasVarint = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional Decimal decimal = 16;
 * @return {?proto.stargate.Decimal}
 */
proto.stargate.Value.prototype.getDecimal = function() {
  return /** @type{?proto.stargate.Decimal} */ (
    jspb.Message.getWrapperField(this, proto.stargate.Decimal, 16));
};


/**
 * @param {?proto.stargate.Decimal|undefined} value
 * @return {!proto.stargate.Value} returns this
*/
proto.stargate.Value.prototype.setDecimal = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.stargate.Value.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.Value} returns this
 */
proto.stargate.Value.prototype.clearDecimal = function() {
  return this.setDecimal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.Value.prototype.hasDecimal = function() {
  return jspb.Message.getField(this, 16) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.Query.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.Query.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.Query} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Query.toObject = function(includeInstance, msg) {
  var f, obj = {
    cql: jspb.Message.getFieldWithDefault(msg, 1, ""),
    values: (f = msg.getValues()) && proto.stargate.Values.toObject(includeInstance, f),
    parameters: (f = msg.getParameters()) && proto.stargate.QueryParameters.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.Query}
 */
proto.stargate.Query.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.Query;
  return proto.stargate.Query.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.Query} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.Query}
 */
proto.stargate.Query.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCql(value);
      break;
    case 2:
      var value = new proto.stargate.Values;
      reader.readMessage(value,proto.stargate.Values.deserializeBinaryFromReader);
      msg.setValues(value);
      break;
    case 3:
      var value = new proto.stargate.QueryParameters;
      reader.readMessage(value,proto.stargate.QueryParameters.deserializeBinaryFromReader);
      msg.setParameters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.Query.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.Query.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.Query} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Query.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCql();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValues();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.stargate.Values.serializeBinaryToWriter
    );
  }
  f = message.getParameters();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.stargate.QueryParameters.serializeBinaryToWriter
    );
  }
};


/**
 * optional string cql = 1;
 * @return {string}
 */
proto.stargate.Query.prototype.getCql = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.stargate.Query} returns this
 */
proto.stargate.Query.prototype.setCql = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Values values = 2;
 * @return {?proto.stargate.Values}
 */
proto.stargate.Query.prototype.getValues = function() {
  return /** @type{?proto.stargate.Values} */ (
    jspb.Message.getWrapperField(this, proto.stargate.Values, 2));
};


/**
 * @param {?proto.stargate.Values|undefined} value
 * @return {!proto.stargate.Query} returns this
*/
proto.stargate.Query.prototype.setValues = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.Query} returns this
 */
proto.stargate.Query.prototype.clearValues = function() {
  return this.setValues(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.Query.prototype.hasValues = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional QueryParameters parameters = 3;
 * @return {?proto.stargate.QueryParameters}
 */
proto.stargate.Query.prototype.getParameters = function() {
  return /** @type{?proto.stargate.QueryParameters} */ (
    jspb.Message.getWrapperField(this, proto.stargate.QueryParameters, 3));
};


/**
 * @param {?proto.stargate.QueryParameters|undefined} value
 * @return {!proto.stargate.Query} returns this
*/
proto.stargate.Query.prototype.setParameters = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.Query} returns this
 */
proto.stargate.Query.prototype.clearParameters = function() {
  return this.setParameters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.Query.prototype.hasParameters = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.stargate.Values.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.Values.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.Values.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.Values} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Values.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: jspb.Message.toObjectList(msg.getValuesList(),
    proto.stargate.Value.toObject, includeInstance),
    valueNamesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.Values}
 */
proto.stargate.Values.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.Values;
  return proto.stargate.Values.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.Values} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.Values}
 */
proto.stargate.Values.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.stargate.Value;
      reader.readMessage(value,proto.stargate.Value.deserializeBinaryFromReader);
      msg.addValues(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addValueNames(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.Values.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.Values.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.Values} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Values.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.stargate.Value.serializeBinaryToWriter
    );
  }
  f = message.getValueNamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * repeated Value values = 1;
 * @return {!Array<!proto.stargate.Value>}
 */
proto.stargate.Values.prototype.getValuesList = function() {
  return /** @type{!Array<!proto.stargate.Value>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.stargate.Value, 1));
};


/**
 * @param {!Array<!proto.stargate.Value>} value
 * @return {!proto.stargate.Values} returns this
*/
proto.stargate.Values.prototype.setValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.stargate.Value=} opt_value
 * @param {number=} opt_index
 * @return {!proto.stargate.Value}
 */
proto.stargate.Values.prototype.addValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.stargate.Value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.stargate.Values} returns this
 */
proto.stargate.Values.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};


/**
 * repeated string value_names = 2;
 * @return {!Array<string>}
 */
proto.stargate.Values.prototype.getValueNamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.stargate.Values} returns this
 */
proto.stargate.Values.prototype.setValueNamesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.stargate.Values} returns this
 */
proto.stargate.Values.prototype.addValueNames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.stargate.Values} returns this
 */
proto.stargate.Values.prototype.clearValueNamesList = function() {
  return this.setValueNamesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.QueryParameters.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.QueryParameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.QueryParameters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.QueryParameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyspace: (f = msg.getKeyspace()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    consistency: (f = msg.getConsistency()) && proto.stargate.ConsistencyValue.toObject(includeInstance, f),
    pageSize: (f = msg.getPageSize()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f),
    pagingState: (f = msg.getPagingState()) && google_protobuf_wrappers_pb.BytesValue.toObject(includeInstance, f),
    tracing: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    skipMetadata: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    serialConsistency: (f = msg.getSerialConsistency()) && proto.stargate.ConsistencyValue.toObject(includeInstance, f),
    nowInSeconds: (f = msg.getNowInSeconds()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f),
    tracingConsistency: (f = msg.getTracingConsistency()) && proto.stargate.ConsistencyValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.QueryParameters}
 */
proto.stargate.QueryParameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.QueryParameters;
  return proto.stargate.QueryParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.QueryParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.QueryParameters}
 */
proto.stargate.QueryParameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setKeyspace(value);
      break;
    case 2:
      var value = new proto.stargate.ConsistencyValue;
      reader.readMessage(value,proto.stargate.ConsistencyValue.deserializeBinaryFromReader);
      msg.setConsistency(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setPageSize(value);
      break;
    case 4:
      var value = new google_protobuf_wrappers_pb.BytesValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BytesValue.deserializeBinaryFromReader);
      msg.setPagingState(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTracing(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSkipMetadata(value);
      break;
    case 7:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 8:
      var value = new proto.stargate.ConsistencyValue;
      reader.readMessage(value,proto.stargate.ConsistencyValue.deserializeBinaryFromReader);
      msg.setSerialConsistency(value);
      break;
    case 9:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setNowInSeconds(value);
      break;
    case 10:
      var value = new proto.stargate.ConsistencyValue;
      reader.readMessage(value,proto.stargate.ConsistencyValue.deserializeBinaryFromReader);
      msg.setTracingConsistency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.QueryParameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.QueryParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.QueryParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.QueryParameters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyspace();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getConsistency();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.stargate.ConsistencyValue.serializeBinaryToWriter
    );
  }
  f = message.getPageSize();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
  f = message.getPagingState();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_wrappers_pb.BytesValue.serializeBinaryToWriter
    );
  }
  f = message.getTracing();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getSkipMetadata();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getSerialConsistency();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.stargate.ConsistencyValue.serializeBinaryToWriter
    );
  }
  f = message.getNowInSeconds();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
  f = message.getTracingConsistency();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.stargate.ConsistencyValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.StringValue keyspace = 1;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.stargate.QueryParameters.prototype.getKeyspace = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 1));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.stargate.QueryParameters} returns this
*/
proto.stargate.QueryParameters.prototype.setKeyspace = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.QueryParameters} returns this
 */
proto.stargate.QueryParameters.prototype.clearKeyspace = function() {
  return this.setKeyspace(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.QueryParameters.prototype.hasKeyspace = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ConsistencyValue consistency = 2;
 * @return {?proto.stargate.ConsistencyValue}
 */
proto.stargate.QueryParameters.prototype.getConsistency = function() {
  return /** @type{?proto.stargate.ConsistencyValue} */ (
    jspb.Message.getWrapperField(this, proto.stargate.ConsistencyValue, 2));
};


/**
 * @param {?proto.stargate.ConsistencyValue|undefined} value
 * @return {!proto.stargate.QueryParameters} returns this
*/
proto.stargate.QueryParameters.prototype.setConsistency = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.QueryParameters} returns this
 */
proto.stargate.QueryParameters.prototype.clearConsistency = function() {
  return this.setConsistency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.QueryParameters.prototype.hasConsistency = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Int32Value page_size = 3;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.stargate.QueryParameters.prototype.getPageSize = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 3));
};


/**
 * @param {?proto.google.protobuf.Int32Value|undefined} value
 * @return {!proto.stargate.QueryParameters} returns this
*/
proto.stargate.QueryParameters.prototype.setPageSize = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.QueryParameters} returns this
 */
proto.stargate.QueryParameters.prototype.clearPageSize = function() {
  return this.setPageSize(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.QueryParameters.prototype.hasPageSize = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.BytesValue paging_state = 4;
 * @return {?proto.google.protobuf.BytesValue}
 */
proto.stargate.QueryParameters.prototype.getPagingState = function() {
  return /** @type{?proto.google.protobuf.BytesValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BytesValue, 4));
};


/**
 * @param {?proto.google.protobuf.BytesValue|undefined} value
 * @return {!proto.stargate.QueryParameters} returns this
*/
proto.stargate.QueryParameters.prototype.setPagingState = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.QueryParameters} returns this
 */
proto.stargate.QueryParameters.prototype.clearPagingState = function() {
  return this.setPagingState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.QueryParameters.prototype.hasPagingState = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool tracing = 5;
 * @return {boolean}
 */
proto.stargate.QueryParameters.prototype.getTracing = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.stargate.QueryParameters} returns this
 */
proto.stargate.QueryParameters.prototype.setTracing = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool skip_metadata = 6;
 * @return {boolean}
 */
proto.stargate.QueryParameters.prototype.getSkipMetadata = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.stargate.QueryParameters} returns this
 */
proto.stargate.QueryParameters.prototype.setSkipMetadata = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional google.protobuf.Int64Value timestamp = 7;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.stargate.QueryParameters.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 7));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.stargate.QueryParameters} returns this
*/
proto.stargate.QueryParameters.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.QueryParameters} returns this
 */
proto.stargate.QueryParameters.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.QueryParameters.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ConsistencyValue serial_consistency = 8;
 * @return {?proto.stargate.ConsistencyValue}
 */
proto.stargate.QueryParameters.prototype.getSerialConsistency = function() {
  return /** @type{?proto.stargate.ConsistencyValue} */ (
    jspb.Message.getWrapperField(this, proto.stargate.ConsistencyValue, 8));
};


/**
 * @param {?proto.stargate.ConsistencyValue|undefined} value
 * @return {!proto.stargate.QueryParameters} returns this
*/
proto.stargate.QueryParameters.prototype.setSerialConsistency = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.QueryParameters} returns this
 */
proto.stargate.QueryParameters.prototype.clearSerialConsistency = function() {
  return this.setSerialConsistency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.QueryParameters.prototype.hasSerialConsistency = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.Int32Value now_in_seconds = 9;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.stargate.QueryParameters.prototype.getNowInSeconds = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 9));
};


/**
 * @param {?proto.google.protobuf.Int32Value|undefined} value
 * @return {!proto.stargate.QueryParameters} returns this
*/
proto.stargate.QueryParameters.prototype.setNowInSeconds = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.QueryParameters} returns this
 */
proto.stargate.QueryParameters.prototype.clearNowInSeconds = function() {
  return this.setNowInSeconds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.QueryParameters.prototype.hasNowInSeconds = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional ConsistencyValue tracing_consistency = 10;
 * @return {?proto.stargate.ConsistencyValue}
 */
proto.stargate.QueryParameters.prototype.getTracingConsistency = function() {
  return /** @type{?proto.stargate.ConsistencyValue} */ (
    jspb.Message.getWrapperField(this, proto.stargate.ConsistencyValue, 10));
};


/**
 * @param {?proto.stargate.ConsistencyValue|undefined} value
 * @return {!proto.stargate.QueryParameters} returns this
*/
proto.stargate.QueryParameters.prototype.setTracingConsistency = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.QueryParameters} returns this
 */
proto.stargate.QueryParameters.prototype.clearTracingConsistency = function() {
  return this.setTracingConsistency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.QueryParameters.prototype.hasTracingConsistency = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.stargate.TypeSpec.oneofGroups_ = [[1,2,3,4,5,6]];

/**
 * @enum {number}
 */
proto.stargate.TypeSpec.SpecCase = {
  SPEC_NOT_SET: 0,
  BASIC: 1,
  MAP: 2,
  LIST: 3,
  SET: 4,
  UDT: 5,
  TUPLE: 6
};

/**
 * @return {proto.stargate.TypeSpec.SpecCase}
 */
proto.stargate.TypeSpec.prototype.getSpecCase = function() {
  return /** @type {proto.stargate.TypeSpec.SpecCase} */(jspb.Message.computeOneofCase(this, proto.stargate.TypeSpec.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.TypeSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.TypeSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.TypeSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.TypeSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    basic: jspb.Message.getFieldWithDefault(msg, 1, 0),
    map: (f = msg.getMap()) && proto.stargate.TypeSpec.Map.toObject(includeInstance, f),
    list: (f = msg.getList()) && proto.stargate.TypeSpec.List.toObject(includeInstance, f),
    set: (f = msg.getSet()) && proto.stargate.TypeSpec.Set.toObject(includeInstance, f),
    udt: (f = msg.getUdt()) && proto.stargate.TypeSpec.Udt.toObject(includeInstance, f),
    tuple: (f = msg.getTuple()) && proto.stargate.TypeSpec.Tuple.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.TypeSpec}
 */
proto.stargate.TypeSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.TypeSpec;
  return proto.stargate.TypeSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.TypeSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.TypeSpec}
 */
proto.stargate.TypeSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.stargate.TypeSpec.Basic} */ (reader.readEnum());
      msg.setBasic(value);
      break;
    case 2:
      var value = new proto.stargate.TypeSpec.Map;
      reader.readMessage(value,proto.stargate.TypeSpec.Map.deserializeBinaryFromReader);
      msg.setMap(value);
      break;
    case 3:
      var value = new proto.stargate.TypeSpec.List;
      reader.readMessage(value,proto.stargate.TypeSpec.List.deserializeBinaryFromReader);
      msg.setList(value);
      break;
    case 4:
      var value = new proto.stargate.TypeSpec.Set;
      reader.readMessage(value,proto.stargate.TypeSpec.Set.deserializeBinaryFromReader);
      msg.setSet(value);
      break;
    case 5:
      var value = new proto.stargate.TypeSpec.Udt;
      reader.readMessage(value,proto.stargate.TypeSpec.Udt.deserializeBinaryFromReader);
      msg.setUdt(value);
      break;
    case 6:
      var value = new proto.stargate.TypeSpec.Tuple;
      reader.readMessage(value,proto.stargate.TypeSpec.Tuple.deserializeBinaryFromReader);
      msg.setTuple(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.TypeSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.TypeSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.TypeSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.TypeSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.stargate.TypeSpec.Basic} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMap();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.stargate.TypeSpec.Map.serializeBinaryToWriter
    );
  }
  f = message.getList();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.stargate.TypeSpec.List.serializeBinaryToWriter
    );
  }
  f = message.getSet();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.stargate.TypeSpec.Set.serializeBinaryToWriter
    );
  }
  f = message.getUdt();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.stargate.TypeSpec.Udt.serializeBinaryToWriter
    );
  }
  f = message.getTuple();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.stargate.TypeSpec.Tuple.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.stargate.TypeSpec.Basic = {
  CUSTOM: 0,
  ASCII: 1,
  BIGINT: 2,
  BLOB: 3,
  BOOLEAN: 4,
  COUNTER: 5,
  DECIMAL: 6,
  DOUBLE: 7,
  FLOAT: 8,
  INT: 9,
  TEXT: 10,
  TIMESTAMP: 11,
  UUID: 12,
  VARCHAR: 13,
  VARINT: 14,
  TIMEUUID: 15,
  INET: 16,
  DATE: 17,
  TIME: 18,
  SMALLINT: 19,
  TINYINT: 20
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.TypeSpec.Map.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.TypeSpec.Map.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.TypeSpec.Map} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.TypeSpec.Map.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: (f = msg.getKey()) && proto.stargate.TypeSpec.toObject(includeInstance, f),
    value: (f = msg.getValue()) && proto.stargate.TypeSpec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.TypeSpec.Map}
 */
proto.stargate.TypeSpec.Map.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.TypeSpec.Map;
  return proto.stargate.TypeSpec.Map.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.TypeSpec.Map} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.TypeSpec.Map}
 */
proto.stargate.TypeSpec.Map.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.stargate.TypeSpec;
      reader.readMessage(value,proto.stargate.TypeSpec.deserializeBinaryFromReader);
      msg.setKey(value);
      break;
    case 2:
      var value = new proto.stargate.TypeSpec;
      reader.readMessage(value,proto.stargate.TypeSpec.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.TypeSpec.Map.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.TypeSpec.Map.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.TypeSpec.Map} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.TypeSpec.Map.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.stargate.TypeSpec.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.stargate.TypeSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional TypeSpec key = 1;
 * @return {?proto.stargate.TypeSpec}
 */
proto.stargate.TypeSpec.Map.prototype.getKey = function() {
  return /** @type{?proto.stargate.TypeSpec} */ (
    jspb.Message.getWrapperField(this, proto.stargate.TypeSpec, 1));
};


/**
 * @param {?proto.stargate.TypeSpec|undefined} value
 * @return {!proto.stargate.TypeSpec.Map} returns this
*/
proto.stargate.TypeSpec.Map.prototype.setKey = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.TypeSpec.Map} returns this
 */
proto.stargate.TypeSpec.Map.prototype.clearKey = function() {
  return this.setKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.TypeSpec.Map.prototype.hasKey = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TypeSpec value = 2;
 * @return {?proto.stargate.TypeSpec}
 */
proto.stargate.TypeSpec.Map.prototype.getValue = function() {
  return /** @type{?proto.stargate.TypeSpec} */ (
    jspb.Message.getWrapperField(this, proto.stargate.TypeSpec, 2));
};


/**
 * @param {?proto.stargate.TypeSpec|undefined} value
 * @return {!proto.stargate.TypeSpec.Map} returns this
*/
proto.stargate.TypeSpec.Map.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.TypeSpec.Map} returns this
 */
proto.stargate.TypeSpec.Map.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.TypeSpec.Map.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.TypeSpec.List.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.TypeSpec.List.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.TypeSpec.List} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.TypeSpec.List.toObject = function(includeInstance, msg) {
  var f, obj = {
    element: (f = msg.getElement()) && proto.stargate.TypeSpec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.TypeSpec.List}
 */
proto.stargate.TypeSpec.List.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.TypeSpec.List;
  return proto.stargate.TypeSpec.List.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.TypeSpec.List} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.TypeSpec.List}
 */
proto.stargate.TypeSpec.List.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.stargate.TypeSpec;
      reader.readMessage(value,proto.stargate.TypeSpec.deserializeBinaryFromReader);
      msg.setElement(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.TypeSpec.List.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.TypeSpec.List.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.TypeSpec.List} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.TypeSpec.List.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getElement();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.stargate.TypeSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional TypeSpec element = 1;
 * @return {?proto.stargate.TypeSpec}
 */
proto.stargate.TypeSpec.List.prototype.getElement = function() {
  return /** @type{?proto.stargate.TypeSpec} */ (
    jspb.Message.getWrapperField(this, proto.stargate.TypeSpec, 1));
};


/**
 * @param {?proto.stargate.TypeSpec|undefined} value
 * @return {!proto.stargate.TypeSpec.List} returns this
*/
proto.stargate.TypeSpec.List.prototype.setElement = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.TypeSpec.List} returns this
 */
proto.stargate.TypeSpec.List.prototype.clearElement = function() {
  return this.setElement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.TypeSpec.List.prototype.hasElement = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.TypeSpec.Set.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.TypeSpec.Set.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.TypeSpec.Set} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.TypeSpec.Set.toObject = function(includeInstance, msg) {
  var f, obj = {
    element: (f = msg.getElement()) && proto.stargate.TypeSpec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.TypeSpec.Set}
 */
proto.stargate.TypeSpec.Set.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.TypeSpec.Set;
  return proto.stargate.TypeSpec.Set.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.TypeSpec.Set} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.TypeSpec.Set}
 */
proto.stargate.TypeSpec.Set.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.stargate.TypeSpec;
      reader.readMessage(value,proto.stargate.TypeSpec.deserializeBinaryFromReader);
      msg.setElement(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.TypeSpec.Set.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.TypeSpec.Set.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.TypeSpec.Set} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.TypeSpec.Set.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getElement();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.stargate.TypeSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional TypeSpec element = 1;
 * @return {?proto.stargate.TypeSpec}
 */
proto.stargate.TypeSpec.Set.prototype.getElement = function() {
  return /** @type{?proto.stargate.TypeSpec} */ (
    jspb.Message.getWrapperField(this, proto.stargate.TypeSpec, 1));
};


/**
 * @param {?proto.stargate.TypeSpec|undefined} value
 * @return {!proto.stargate.TypeSpec.Set} returns this
*/
proto.stargate.TypeSpec.Set.prototype.setElement = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.TypeSpec.Set} returns this
 */
proto.stargate.TypeSpec.Set.prototype.clearElement = function() {
  return this.setElement(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.TypeSpec.Set.prototype.hasElement = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.TypeSpec.Udt.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.TypeSpec.Udt.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.TypeSpec.Udt} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.TypeSpec.Udt.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldsMap: (f = msg.getFieldsMap()) ? f.toObject(includeInstance, proto.stargate.TypeSpec.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.TypeSpec.Udt}
 */
proto.stargate.TypeSpec.Udt.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.TypeSpec.Udt;
  return proto.stargate.TypeSpec.Udt.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.TypeSpec.Udt} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.TypeSpec.Udt}
 */
proto.stargate.TypeSpec.Udt.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getFieldsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.stargate.TypeSpec.deserializeBinaryFromReader, "", new proto.stargate.TypeSpec());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.TypeSpec.Udt.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.TypeSpec.Udt.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.TypeSpec.Udt} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.TypeSpec.Udt.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.stargate.TypeSpec.serializeBinaryToWriter);
  }
};


/**
 * map<string, TypeSpec> fields = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.stargate.TypeSpec>}
 */
proto.stargate.TypeSpec.Udt.prototype.getFieldsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.stargate.TypeSpec>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.stargate.TypeSpec));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.stargate.TypeSpec.Udt} returns this
 */
proto.stargate.TypeSpec.Udt.prototype.clearFieldsMap = function() {
  this.getFieldsMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.stargate.TypeSpec.Tuple.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.TypeSpec.Tuple.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.TypeSpec.Tuple.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.TypeSpec.Tuple} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.TypeSpec.Tuple.toObject = function(includeInstance, msg) {
  var f, obj = {
    elementsList: jspb.Message.toObjectList(msg.getElementsList(),
    proto.stargate.TypeSpec.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.TypeSpec.Tuple}
 */
proto.stargate.TypeSpec.Tuple.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.TypeSpec.Tuple;
  return proto.stargate.TypeSpec.Tuple.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.TypeSpec.Tuple} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.TypeSpec.Tuple}
 */
proto.stargate.TypeSpec.Tuple.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.stargate.TypeSpec;
      reader.readMessage(value,proto.stargate.TypeSpec.deserializeBinaryFromReader);
      msg.addElements(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.TypeSpec.Tuple.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.TypeSpec.Tuple.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.TypeSpec.Tuple} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.TypeSpec.Tuple.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getElementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.stargate.TypeSpec.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TypeSpec elements = 1;
 * @return {!Array<!proto.stargate.TypeSpec>}
 */
proto.stargate.TypeSpec.Tuple.prototype.getElementsList = function() {
  return /** @type{!Array<!proto.stargate.TypeSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.stargate.TypeSpec, 1));
};


/**
 * @param {!Array<!proto.stargate.TypeSpec>} value
 * @return {!proto.stargate.TypeSpec.Tuple} returns this
*/
proto.stargate.TypeSpec.Tuple.prototype.setElementsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.stargate.TypeSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.stargate.TypeSpec}
 */
proto.stargate.TypeSpec.Tuple.prototype.addElements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.stargate.TypeSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.stargate.TypeSpec.Tuple} returns this
 */
proto.stargate.TypeSpec.Tuple.prototype.clearElementsList = function() {
  return this.setElementsList([]);
};


/**
 * optional Basic basic = 1;
 * @return {!proto.stargate.TypeSpec.Basic}
 */
proto.stargate.TypeSpec.prototype.getBasic = function() {
  return /** @type {!proto.stargate.TypeSpec.Basic} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.stargate.TypeSpec.Basic} value
 * @return {!proto.stargate.TypeSpec} returns this
 */
proto.stargate.TypeSpec.prototype.setBasic = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.stargate.TypeSpec.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.stargate.TypeSpec} returns this
 */
proto.stargate.TypeSpec.prototype.clearBasic = function() {
  return jspb.Message.setOneofField(this, 1, proto.stargate.TypeSpec.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.TypeSpec.prototype.hasBasic = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Map map = 2;
 * @return {?proto.stargate.TypeSpec.Map}
 */
proto.stargate.TypeSpec.prototype.getMap = function() {
  return /** @type{?proto.stargate.TypeSpec.Map} */ (
    jspb.Message.getWrapperField(this, proto.stargate.TypeSpec.Map, 2));
};


/**
 * @param {?proto.stargate.TypeSpec.Map|undefined} value
 * @return {!proto.stargate.TypeSpec} returns this
*/
proto.stargate.TypeSpec.prototype.setMap = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.stargate.TypeSpec.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.TypeSpec} returns this
 */
proto.stargate.TypeSpec.prototype.clearMap = function() {
  return this.setMap(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.TypeSpec.prototype.hasMap = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional List list = 3;
 * @return {?proto.stargate.TypeSpec.List}
 */
proto.stargate.TypeSpec.prototype.getList = function() {
  return /** @type{?proto.stargate.TypeSpec.List} */ (
    jspb.Message.getWrapperField(this, proto.stargate.TypeSpec.List, 3));
};


/**
 * @param {?proto.stargate.TypeSpec.List|undefined} value
 * @return {!proto.stargate.TypeSpec} returns this
*/
proto.stargate.TypeSpec.prototype.setList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.stargate.TypeSpec.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.TypeSpec} returns this
 */
proto.stargate.TypeSpec.prototype.clearList = function() {
  return this.setList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.TypeSpec.prototype.hasList = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Set set = 4;
 * @return {?proto.stargate.TypeSpec.Set}
 */
proto.stargate.TypeSpec.prototype.getSet = function() {
  return /** @type{?proto.stargate.TypeSpec.Set} */ (
    jspb.Message.getWrapperField(this, proto.stargate.TypeSpec.Set, 4));
};


/**
 * @param {?proto.stargate.TypeSpec.Set|undefined} value
 * @return {!proto.stargate.TypeSpec} returns this
*/
proto.stargate.TypeSpec.prototype.setSet = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.stargate.TypeSpec.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.TypeSpec} returns this
 */
proto.stargate.TypeSpec.prototype.clearSet = function() {
  return this.setSet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.TypeSpec.prototype.hasSet = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Udt udt = 5;
 * @return {?proto.stargate.TypeSpec.Udt}
 */
proto.stargate.TypeSpec.prototype.getUdt = function() {
  return /** @type{?proto.stargate.TypeSpec.Udt} */ (
    jspb.Message.getWrapperField(this, proto.stargate.TypeSpec.Udt, 5));
};


/**
 * @param {?proto.stargate.TypeSpec.Udt|undefined} value
 * @return {!proto.stargate.TypeSpec} returns this
*/
proto.stargate.TypeSpec.prototype.setUdt = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.stargate.TypeSpec.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.TypeSpec} returns this
 */
proto.stargate.TypeSpec.prototype.clearUdt = function() {
  return this.setUdt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.TypeSpec.prototype.hasUdt = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Tuple tuple = 6;
 * @return {?proto.stargate.TypeSpec.Tuple}
 */
proto.stargate.TypeSpec.prototype.getTuple = function() {
  return /** @type{?proto.stargate.TypeSpec.Tuple} */ (
    jspb.Message.getWrapperField(this, proto.stargate.TypeSpec.Tuple, 6));
};


/**
 * @param {?proto.stargate.TypeSpec.Tuple|undefined} value
 * @return {!proto.stargate.TypeSpec} returns this
*/
proto.stargate.TypeSpec.prototype.setTuple = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.stargate.TypeSpec.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.TypeSpec} returns this
 */
proto.stargate.TypeSpec.prototype.clearTuple = function() {
  return this.setTuple(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.TypeSpec.prototype.hasTuple = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.ColumnSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.ColumnSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.ColumnSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.ColumnSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: (f = msg.getType()) && proto.stargate.TypeSpec.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.ColumnSpec}
 */
proto.stargate.ColumnSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.ColumnSpec;
  return proto.stargate.ColumnSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.ColumnSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.ColumnSpec}
 */
proto.stargate.ColumnSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.stargate.TypeSpec;
      reader.readMessage(value,proto.stargate.TypeSpec.deserializeBinaryFromReader);
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.ColumnSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.ColumnSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.ColumnSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.ColumnSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.stargate.TypeSpec.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional TypeSpec type = 1;
 * @return {?proto.stargate.TypeSpec}
 */
proto.stargate.ColumnSpec.prototype.getType = function() {
  return /** @type{?proto.stargate.TypeSpec} */ (
    jspb.Message.getWrapperField(this, proto.stargate.TypeSpec, 1));
};


/**
 * @param {?proto.stargate.TypeSpec|undefined} value
 * @return {!proto.stargate.ColumnSpec} returns this
*/
proto.stargate.ColumnSpec.prototype.setType = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.ColumnSpec} returns this
 */
proto.stargate.ColumnSpec.prototype.clearType = function() {
  return this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.ColumnSpec.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.stargate.ColumnSpec.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.stargate.ColumnSpec} returns this
 */
proto.stargate.ColumnSpec.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.stargate.Traces.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.Traces.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.Traces.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.Traces} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Traces.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    duration: jspb.Message.getFieldWithDefault(msg, 2, 0),
    startedAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    proto.stargate.Traces.Event.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.Traces}
 */
proto.stargate.Traces.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.Traces;
  return proto.stargate.Traces.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.Traces} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.Traces}
 */
proto.stargate.Traces.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDuration(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartedAt(value);
      break;
    case 4:
      var value = new proto.stargate.Traces.Event;
      reader.readMessage(value,proto.stargate.Traces.Event.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.Traces.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.Traces.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.Traces} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Traces.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDuration();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getStartedAt();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.stargate.Traces.Event.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.Traces.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.Traces.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.Traces.Event} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Traces.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
    activity: jspb.Message.getFieldWithDefault(msg, 1, ""),
    source: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sourceElapsed: jspb.Message.getFieldWithDefault(msg, 3, 0),
    thread: jspb.Message.getFieldWithDefault(msg, 4, ""),
    eventId: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.Traces.Event}
 */
proto.stargate.Traces.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.Traces.Event;
  return proto.stargate.Traces.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.Traces.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.Traces.Event}
 */
proto.stargate.Traces.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setActivity(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSourceElapsed(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setThread(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.Traces.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.Traces.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.Traces.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Traces.Event.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActivity();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSourceElapsed();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getThread();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEventId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string activity = 1;
 * @return {string}
 */
proto.stargate.Traces.Event.prototype.getActivity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.stargate.Traces.Event} returns this
 */
proto.stargate.Traces.Event.prototype.setActivity = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.stargate.Traces.Event.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.stargate.Traces.Event} returns this
 */
proto.stargate.Traces.Event.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 source_elapsed = 3;
 * @return {number}
 */
proto.stargate.Traces.Event.prototype.getSourceElapsed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.stargate.Traces.Event} returns this
 */
proto.stargate.Traces.Event.prototype.setSourceElapsed = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string thread = 4;
 * @return {string}
 */
proto.stargate.Traces.Event.prototype.getThread = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.stargate.Traces.Event} returns this
 */
proto.stargate.Traces.Event.prototype.setThread = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string event_id = 5;
 * @return {string}
 */
proto.stargate.Traces.Event.prototype.getEventId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.stargate.Traces.Event} returns this
 */
proto.stargate.Traces.Event.prototype.setEventId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.stargate.Traces.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.stargate.Traces} returns this
 */
proto.stargate.Traces.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 duration = 2;
 * @return {number}
 */
proto.stargate.Traces.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.stargate.Traces} returns this
 */
proto.stargate.Traces.prototype.setDuration = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 started_at = 3;
 * @return {number}
 */
proto.stargate.Traces.prototype.getStartedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.stargate.Traces} returns this
 */
proto.stargate.Traces.prototype.setStartedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated Event events = 4;
 * @return {!Array<!proto.stargate.Traces.Event>}
 */
proto.stargate.Traces.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.stargate.Traces.Event>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.stargate.Traces.Event, 4));
};


/**
 * @param {!Array<!proto.stargate.Traces.Event>} value
 * @return {!proto.stargate.Traces} returns this
*/
proto.stargate.Traces.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.stargate.Traces.Event=} opt_value
 * @param {number=} opt_index
 * @return {!proto.stargate.Traces.Event}
 */
proto.stargate.Traces.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.stargate.Traces.Event, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.stargate.Traces} returns this
 */
proto.stargate.Traces.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.stargate.SchemaChange.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.SchemaChange.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.SchemaChange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.SchemaChange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.SchemaChange.toObject = function(includeInstance, msg) {
  var f, obj = {
    changeType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    target: jspb.Message.getFieldWithDefault(msg, 2, 0),
    keyspace: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: (f = msg.getName()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    argumentTypesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.SchemaChange}
 */
proto.stargate.SchemaChange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.SchemaChange;
  return proto.stargate.SchemaChange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.SchemaChange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.SchemaChange}
 */
proto.stargate.SchemaChange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.stargate.SchemaChange.Type} */ (reader.readEnum());
      msg.setChangeType(value);
      break;
    case 2:
      var value = /** @type {!proto.stargate.SchemaChange.Target} */ (reader.readEnum());
      msg.setTarget(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyspace(value);
      break;
    case 4:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addArgumentTypes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.SchemaChange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.SchemaChange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.SchemaChange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.SchemaChange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChangeType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getTarget();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getKeyspace();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getArgumentTypesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.stargate.SchemaChange.Type = {
  CREATED: 0,
  UPDATED: 1,
  DROPPED: 2
};

/**
 * @enum {number}
 */
proto.stargate.SchemaChange.Target = {
  KEYSPACE: 0,
  TABLE: 1,
  TYPE: 2,
  FUNCTION: 3,
  AGGREGATE: 4
};

/**
 * optional Type change_type = 1;
 * @return {!proto.stargate.SchemaChange.Type}
 */
proto.stargate.SchemaChange.prototype.getChangeType = function() {
  return /** @type {!proto.stargate.SchemaChange.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.stargate.SchemaChange.Type} value
 * @return {!proto.stargate.SchemaChange} returns this
 */
proto.stargate.SchemaChange.prototype.setChangeType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Target target = 2;
 * @return {!proto.stargate.SchemaChange.Target}
 */
proto.stargate.SchemaChange.prototype.getTarget = function() {
  return /** @type {!proto.stargate.SchemaChange.Target} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.stargate.SchemaChange.Target} value
 * @return {!proto.stargate.SchemaChange} returns this
 */
proto.stargate.SchemaChange.prototype.setTarget = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string keyspace = 3;
 * @return {string}
 */
proto.stargate.SchemaChange.prototype.getKeyspace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.stargate.SchemaChange} returns this
 */
proto.stargate.SchemaChange.prototype.setKeyspace = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.StringValue name = 4;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.stargate.SchemaChange.prototype.getName = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 4));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.stargate.SchemaChange} returns this
*/
proto.stargate.SchemaChange.prototype.setName = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.SchemaChange} returns this
 */
proto.stargate.SchemaChange.prototype.clearName = function() {
  return this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.SchemaChange.prototype.hasName = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated string argument_types = 5;
 * @return {!Array<string>}
 */
proto.stargate.SchemaChange.prototype.getArgumentTypesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.stargate.SchemaChange} returns this
 */
proto.stargate.SchemaChange.prototype.setArgumentTypesList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.stargate.SchemaChange} returns this
 */
proto.stargate.SchemaChange.prototype.addArgumentTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.stargate.SchemaChange} returns this
 */
proto.stargate.SchemaChange.prototype.clearArgumentTypesList = function() {
  return this.setArgumentTypesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.stargate.Response.repeatedFields_ = [2];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.stargate.Response.oneofGroups_ = [[1,4]];

/**
 * @enum {number}
 */
proto.stargate.Response.ResultCase = {
  RESULT_NOT_SET: 0,
  RESULT_SET: 1,
  SCHEMA_CHANGE: 4
};

/**
 * @return {proto.stargate.Response.ResultCase}
 */
proto.stargate.Response.prototype.getResultCase = function() {
  return /** @type {proto.stargate.Response.ResultCase} */(jspb.Message.computeOneofCase(this, proto.stargate.Response.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultSet: (f = msg.getResultSet()) && proto.stargate.ResultSet.toObject(includeInstance, f),
    schemaChange: (f = msg.getSchemaChange()) && proto.stargate.SchemaChange.toObject(includeInstance, f),
    warningsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    traces: (f = msg.getTraces()) && proto.stargate.Traces.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.Response}
 */
proto.stargate.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.Response;
  return proto.stargate.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.Response}
 */
proto.stargate.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.stargate.ResultSet;
      reader.readMessage(value,proto.stargate.ResultSet.deserializeBinaryFromReader);
      msg.setResultSet(value);
      break;
    case 4:
      var value = new proto.stargate.SchemaChange;
      reader.readMessage(value,proto.stargate.SchemaChange.deserializeBinaryFromReader);
      msg.setSchemaChange(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addWarnings(value);
      break;
    case 3:
      var value = new proto.stargate.Traces;
      reader.readMessage(value,proto.stargate.Traces.deserializeBinaryFromReader);
      msg.setTraces(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultSet();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.stargate.ResultSet.serializeBinaryToWriter
    );
  }
  f = message.getSchemaChange();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.stargate.SchemaChange.serializeBinaryToWriter
    );
  }
  f = message.getWarningsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getTraces();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.stargate.Traces.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResultSet result_set = 1;
 * @return {?proto.stargate.ResultSet}
 */
proto.stargate.Response.prototype.getResultSet = function() {
  return /** @type{?proto.stargate.ResultSet} */ (
    jspb.Message.getWrapperField(this, proto.stargate.ResultSet, 1));
};


/**
 * @param {?proto.stargate.ResultSet|undefined} value
 * @return {!proto.stargate.Response} returns this
*/
proto.stargate.Response.prototype.setResultSet = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.stargate.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.Response} returns this
 */
proto.stargate.Response.prototype.clearResultSet = function() {
  return this.setResultSet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.Response.prototype.hasResultSet = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SchemaChange schema_change = 4;
 * @return {?proto.stargate.SchemaChange}
 */
proto.stargate.Response.prototype.getSchemaChange = function() {
  return /** @type{?proto.stargate.SchemaChange} */ (
    jspb.Message.getWrapperField(this, proto.stargate.SchemaChange, 4));
};


/**
 * @param {?proto.stargate.SchemaChange|undefined} value
 * @return {!proto.stargate.Response} returns this
*/
proto.stargate.Response.prototype.setSchemaChange = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.stargate.Response.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.Response} returns this
 */
proto.stargate.Response.prototype.clearSchemaChange = function() {
  return this.setSchemaChange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.Response.prototype.hasSchemaChange = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated string warnings = 2;
 * @return {!Array<string>}
 */
proto.stargate.Response.prototype.getWarningsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.stargate.Response} returns this
 */
proto.stargate.Response.prototype.setWarningsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.stargate.Response} returns this
 */
proto.stargate.Response.prototype.addWarnings = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.stargate.Response} returns this
 */
proto.stargate.Response.prototype.clearWarningsList = function() {
  return this.setWarningsList([]);
};


/**
 * optional Traces traces = 3;
 * @return {?proto.stargate.Traces}
 */
proto.stargate.Response.prototype.getTraces = function() {
  return /** @type{?proto.stargate.Traces} */ (
    jspb.Message.getWrapperField(this, proto.stargate.Traces, 3));
};


/**
 * @param {?proto.stargate.Traces|undefined} value
 * @return {!proto.stargate.Response} returns this
*/
proto.stargate.Response.prototype.setTraces = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.Response} returns this
 */
proto.stargate.Response.prototype.clearTraces = function() {
  return this.setTraces(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.Response.prototype.hasTraces = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.Unavailable.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.Unavailable.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.Unavailable} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Unavailable.toObject = function(includeInstance, msg) {
  var f, obj = {
    consistency: jspb.Message.getFieldWithDefault(msg, 1, 0),
    required: jspb.Message.getFieldWithDefault(msg, 2, 0),
    alive: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.Unavailable}
 */
proto.stargate.Unavailable.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.Unavailable;
  return proto.stargate.Unavailable.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.Unavailable} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.Unavailable}
 */
proto.stargate.Unavailable.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.stargate.Consistency} */ (reader.readEnum());
      msg.setConsistency(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRequired(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAlive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.Unavailable.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.Unavailable.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.Unavailable} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Unavailable.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsistency();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getRequired();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getAlive();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional Consistency consistency = 1;
 * @return {!proto.stargate.Consistency}
 */
proto.stargate.Unavailable.prototype.getConsistency = function() {
  return /** @type {!proto.stargate.Consistency} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.stargate.Consistency} value
 * @return {!proto.stargate.Unavailable} returns this
 */
proto.stargate.Unavailable.prototype.setConsistency = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 required = 2;
 * @return {number}
 */
proto.stargate.Unavailable.prototype.getRequired = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.stargate.Unavailable} returns this
 */
proto.stargate.Unavailable.prototype.setRequired = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 alive = 3;
 * @return {number}
 */
proto.stargate.Unavailable.prototype.getAlive = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.stargate.Unavailable} returns this
 */
proto.stargate.Unavailable.prototype.setAlive = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.WriteTimeout.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.WriteTimeout.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.WriteTimeout} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.WriteTimeout.toObject = function(includeInstance, msg) {
  var f, obj = {
    consistency: jspb.Message.getFieldWithDefault(msg, 1, 0),
    received: jspb.Message.getFieldWithDefault(msg, 2, 0),
    blockFor: jspb.Message.getFieldWithDefault(msg, 3, 0),
    writeType: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.WriteTimeout}
 */
proto.stargate.WriteTimeout.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.WriteTimeout;
  return proto.stargate.WriteTimeout.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.WriteTimeout} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.WriteTimeout}
 */
proto.stargate.WriteTimeout.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.stargate.Consistency} */ (reader.readEnum());
      msg.setConsistency(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReceived(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBlockFor(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWriteType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.WriteTimeout.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.WriteTimeout.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.WriteTimeout} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.WriteTimeout.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsistency();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getReceived();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getBlockFor();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getWriteType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional Consistency consistency = 1;
 * @return {!proto.stargate.Consistency}
 */
proto.stargate.WriteTimeout.prototype.getConsistency = function() {
  return /** @type {!proto.stargate.Consistency} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.stargate.Consistency} value
 * @return {!proto.stargate.WriteTimeout} returns this
 */
proto.stargate.WriteTimeout.prototype.setConsistency = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 received = 2;
 * @return {number}
 */
proto.stargate.WriteTimeout.prototype.getReceived = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.stargate.WriteTimeout} returns this
 */
proto.stargate.WriteTimeout.prototype.setReceived = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 block_for = 3;
 * @return {number}
 */
proto.stargate.WriteTimeout.prototype.getBlockFor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.stargate.WriteTimeout} returns this
 */
proto.stargate.WriteTimeout.prototype.setBlockFor = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string write_type = 4;
 * @return {string}
 */
proto.stargate.WriteTimeout.prototype.getWriteType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.stargate.WriteTimeout} returns this
 */
proto.stargate.WriteTimeout.prototype.setWriteType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.ReadTimeout.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.ReadTimeout.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.ReadTimeout} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.ReadTimeout.toObject = function(includeInstance, msg) {
  var f, obj = {
    consistency: jspb.Message.getFieldWithDefault(msg, 1, 0),
    received: jspb.Message.getFieldWithDefault(msg, 2, 0),
    blockFor: jspb.Message.getFieldWithDefault(msg, 3, 0),
    dataPresent: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.ReadTimeout}
 */
proto.stargate.ReadTimeout.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.ReadTimeout;
  return proto.stargate.ReadTimeout.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.ReadTimeout} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.ReadTimeout}
 */
proto.stargate.ReadTimeout.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.stargate.Consistency} */ (reader.readEnum());
      msg.setConsistency(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReceived(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBlockFor(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDataPresent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.ReadTimeout.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.ReadTimeout.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.ReadTimeout} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.ReadTimeout.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsistency();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getReceived();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getBlockFor();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getDataPresent();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional Consistency consistency = 1;
 * @return {!proto.stargate.Consistency}
 */
proto.stargate.ReadTimeout.prototype.getConsistency = function() {
  return /** @type {!proto.stargate.Consistency} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.stargate.Consistency} value
 * @return {!proto.stargate.ReadTimeout} returns this
 */
proto.stargate.ReadTimeout.prototype.setConsistency = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 received = 2;
 * @return {number}
 */
proto.stargate.ReadTimeout.prototype.getReceived = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.stargate.ReadTimeout} returns this
 */
proto.stargate.ReadTimeout.prototype.setReceived = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 block_for = 3;
 * @return {number}
 */
proto.stargate.ReadTimeout.prototype.getBlockFor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.stargate.ReadTimeout} returns this
 */
proto.stargate.ReadTimeout.prototype.setBlockFor = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool data_present = 4;
 * @return {boolean}
 */
proto.stargate.ReadTimeout.prototype.getDataPresent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.stargate.ReadTimeout} returns this
 */
proto.stargate.ReadTimeout.prototype.setDataPresent = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.ReadFailure.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.ReadFailure.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.ReadFailure} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.ReadFailure.toObject = function(includeInstance, msg) {
  var f, obj = {
    consistency: jspb.Message.getFieldWithDefault(msg, 1, 0),
    received: jspb.Message.getFieldWithDefault(msg, 2, 0),
    blockFor: jspb.Message.getFieldWithDefault(msg, 3, 0),
    numFailures: jspb.Message.getFieldWithDefault(msg, 4, 0),
    dataPresent: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.ReadFailure}
 */
proto.stargate.ReadFailure.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.ReadFailure;
  return proto.stargate.ReadFailure.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.ReadFailure} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.ReadFailure}
 */
proto.stargate.ReadFailure.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.stargate.Consistency} */ (reader.readEnum());
      msg.setConsistency(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReceived(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBlockFor(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumFailures(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDataPresent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.ReadFailure.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.ReadFailure.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.ReadFailure} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.ReadFailure.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsistency();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getReceived();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getBlockFor();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getNumFailures();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getDataPresent();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional Consistency consistency = 1;
 * @return {!proto.stargate.Consistency}
 */
proto.stargate.ReadFailure.prototype.getConsistency = function() {
  return /** @type {!proto.stargate.Consistency} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.stargate.Consistency} value
 * @return {!proto.stargate.ReadFailure} returns this
 */
proto.stargate.ReadFailure.prototype.setConsistency = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 received = 2;
 * @return {number}
 */
proto.stargate.ReadFailure.prototype.getReceived = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.stargate.ReadFailure} returns this
 */
proto.stargate.ReadFailure.prototype.setReceived = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 block_for = 3;
 * @return {number}
 */
proto.stargate.ReadFailure.prototype.getBlockFor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.stargate.ReadFailure} returns this
 */
proto.stargate.ReadFailure.prototype.setBlockFor = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 num_failures = 4;
 * @return {number}
 */
proto.stargate.ReadFailure.prototype.getNumFailures = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.stargate.ReadFailure} returns this
 */
proto.stargate.ReadFailure.prototype.setNumFailures = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool data_present = 5;
 * @return {boolean}
 */
proto.stargate.ReadFailure.prototype.getDataPresent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.stargate.ReadFailure} returns this
 */
proto.stargate.ReadFailure.prototype.setDataPresent = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.stargate.FunctionFailure.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.FunctionFailure.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.FunctionFailure.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.FunctionFailure} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.FunctionFailure.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyspace: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pb_function: jspb.Message.getFieldWithDefault(msg, 2, ""),
    argTypesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.FunctionFailure}
 */
proto.stargate.FunctionFailure.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.FunctionFailure;
  return proto.stargate.FunctionFailure.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.FunctionFailure} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.FunctionFailure}
 */
proto.stargate.FunctionFailure.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyspace(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFunction(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addArgTypes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.FunctionFailure.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.FunctionFailure.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.FunctionFailure} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.FunctionFailure.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyspace();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFunction();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getArgTypesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string keyspace = 1;
 * @return {string}
 */
proto.stargate.FunctionFailure.prototype.getKeyspace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.stargate.FunctionFailure} returns this
 */
proto.stargate.FunctionFailure.prototype.setKeyspace = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string function = 2;
 * @return {string}
 */
proto.stargate.FunctionFailure.prototype.getFunction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.stargate.FunctionFailure} returns this
 */
proto.stargate.FunctionFailure.prototype.setFunction = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string arg_types = 3;
 * @return {!Array<string>}
 */
proto.stargate.FunctionFailure.prototype.getArgTypesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.stargate.FunctionFailure} returns this
 */
proto.stargate.FunctionFailure.prototype.setArgTypesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.stargate.FunctionFailure} returns this
 */
proto.stargate.FunctionFailure.prototype.addArgTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.stargate.FunctionFailure} returns this
 */
proto.stargate.FunctionFailure.prototype.clearArgTypesList = function() {
  return this.setArgTypesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.WriteFailure.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.WriteFailure.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.WriteFailure} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.WriteFailure.toObject = function(includeInstance, msg) {
  var f, obj = {
    consistency: jspb.Message.getFieldWithDefault(msg, 1, 0),
    received: jspb.Message.getFieldWithDefault(msg, 2, 0),
    blockFor: jspb.Message.getFieldWithDefault(msg, 3, 0),
    numFailures: jspb.Message.getFieldWithDefault(msg, 4, 0),
    writeType: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.WriteFailure}
 */
proto.stargate.WriteFailure.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.WriteFailure;
  return proto.stargate.WriteFailure.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.WriteFailure} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.WriteFailure}
 */
proto.stargate.WriteFailure.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.stargate.Consistency} */ (reader.readEnum());
      msg.setConsistency(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReceived(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBlockFor(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumFailures(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setWriteType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.WriteFailure.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.WriteFailure.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.WriteFailure} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.WriteFailure.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsistency();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getReceived();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getBlockFor();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getNumFailures();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getWriteType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional Consistency consistency = 1;
 * @return {!proto.stargate.Consistency}
 */
proto.stargate.WriteFailure.prototype.getConsistency = function() {
  return /** @type {!proto.stargate.Consistency} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.stargate.Consistency} value
 * @return {!proto.stargate.WriteFailure} returns this
 */
proto.stargate.WriteFailure.prototype.setConsistency = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 received = 2;
 * @return {number}
 */
proto.stargate.WriteFailure.prototype.getReceived = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.stargate.WriteFailure} returns this
 */
proto.stargate.WriteFailure.prototype.setReceived = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 block_for = 3;
 * @return {number}
 */
proto.stargate.WriteFailure.prototype.getBlockFor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.stargate.WriteFailure} returns this
 */
proto.stargate.WriteFailure.prototype.setBlockFor = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 num_failures = 4;
 * @return {number}
 */
proto.stargate.WriteFailure.prototype.getNumFailures = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.stargate.WriteFailure} returns this
 */
proto.stargate.WriteFailure.prototype.setNumFailures = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string write_type = 5;
 * @return {string}
 */
proto.stargate.WriteFailure.prototype.getWriteType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.stargate.WriteFailure} returns this
 */
proto.stargate.WriteFailure.prototype.setWriteType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.AlreadyExists.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.AlreadyExists.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.AlreadyExists} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.AlreadyExists.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyspace: jspb.Message.getFieldWithDefault(msg, 1, ""),
    table: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.AlreadyExists}
 */
proto.stargate.AlreadyExists.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.AlreadyExists;
  return proto.stargate.AlreadyExists.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.AlreadyExists} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.AlreadyExists}
 */
proto.stargate.AlreadyExists.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyspace(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.AlreadyExists.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.AlreadyExists.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.AlreadyExists} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.AlreadyExists.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyspace();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTable();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string keyspace = 1;
 * @return {string}
 */
proto.stargate.AlreadyExists.prototype.getKeyspace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.stargate.AlreadyExists} returns this
 */
proto.stargate.AlreadyExists.prototype.setKeyspace = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string table = 2;
 * @return {string}
 */
proto.stargate.AlreadyExists.prototype.getTable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.stargate.AlreadyExists} returns this
 */
proto.stargate.AlreadyExists.prototype.setTable = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.CasWriteUnknown.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.CasWriteUnknown.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.CasWriteUnknown} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.CasWriteUnknown.toObject = function(includeInstance, msg) {
  var f, obj = {
    consistency: jspb.Message.getFieldWithDefault(msg, 1, 0),
    received: jspb.Message.getFieldWithDefault(msg, 2, 0),
    blockFor: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.CasWriteUnknown}
 */
proto.stargate.CasWriteUnknown.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.CasWriteUnknown;
  return proto.stargate.CasWriteUnknown.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.CasWriteUnknown} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.CasWriteUnknown}
 */
proto.stargate.CasWriteUnknown.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.stargate.Consistency} */ (reader.readEnum());
      msg.setConsistency(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReceived(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBlockFor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.CasWriteUnknown.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.CasWriteUnknown.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.CasWriteUnknown} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.CasWriteUnknown.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConsistency();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getReceived();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getBlockFor();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional Consistency consistency = 1;
 * @return {!proto.stargate.Consistency}
 */
proto.stargate.CasWriteUnknown.prototype.getConsistency = function() {
  return /** @type {!proto.stargate.Consistency} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.stargate.Consistency} value
 * @return {!proto.stargate.CasWriteUnknown} returns this
 */
proto.stargate.CasWriteUnknown.prototype.setConsistency = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 received = 2;
 * @return {number}
 */
proto.stargate.CasWriteUnknown.prototype.getReceived = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.stargate.CasWriteUnknown} returns this
 */
proto.stargate.CasWriteUnknown.prototype.setReceived = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 block_for = 3;
 * @return {number}
 */
proto.stargate.CasWriteUnknown.prototype.getBlockFor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.stargate.CasWriteUnknown} returns this
 */
proto.stargate.CasWriteUnknown.prototype.setBlockFor = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.stargate.Row.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.Row.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.Row.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.Row} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Row.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: jspb.Message.toObjectList(msg.getValuesList(),
    proto.stargate.Value.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.Row}
 */
proto.stargate.Row.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.Row;
  return proto.stargate.Row.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.Row} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.Row}
 */
proto.stargate.Row.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.stargate.Value;
      reader.readMessage(value,proto.stargate.Value.deserializeBinaryFromReader);
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.Row.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.Row.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.Row} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Row.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.stargate.Value.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Value values = 1;
 * @return {!Array<!proto.stargate.Value>}
 */
proto.stargate.Row.prototype.getValuesList = function() {
  return /** @type{!Array<!proto.stargate.Value>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.stargate.Value, 1));
};


/**
 * @param {!Array<!proto.stargate.Value>} value
 * @return {!proto.stargate.Row} returns this
*/
proto.stargate.Row.prototype.setValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.stargate.Value=} opt_value
 * @param {number=} opt_index
 * @return {!proto.stargate.Value}
 */
proto.stargate.Row.prototype.addValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.stargate.Value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.stargate.Row} returns this
 */
proto.stargate.Row.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.stargate.ResultSet.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.ResultSet.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.ResultSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.ResultSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.ResultSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    columnsList: jspb.Message.toObjectList(msg.getColumnsList(),
    proto.stargate.ColumnSpec.toObject, includeInstance),
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    proto.stargate.Row.toObject, includeInstance),
    pagingState: (f = msg.getPagingState()) && google_protobuf_wrappers_pb.BytesValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.ResultSet}
 */
proto.stargate.ResultSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.ResultSet;
  return proto.stargate.ResultSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.ResultSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.ResultSet}
 */
proto.stargate.ResultSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.stargate.ColumnSpec;
      reader.readMessage(value,proto.stargate.ColumnSpec.deserializeBinaryFromReader);
      msg.addColumns(value);
      break;
    case 2:
      var value = new proto.stargate.Row;
      reader.readMessage(value,proto.stargate.Row.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.BytesValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BytesValue.deserializeBinaryFromReader);
      msg.setPagingState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.ResultSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.ResultSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.ResultSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.ResultSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColumnsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.stargate.ColumnSpec.serializeBinaryToWriter
    );
  }
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.stargate.Row.serializeBinaryToWriter
    );
  }
  f = message.getPagingState();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.BytesValue.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ColumnSpec columns = 1;
 * @return {!Array<!proto.stargate.ColumnSpec>}
 */
proto.stargate.ResultSet.prototype.getColumnsList = function() {
  return /** @type{!Array<!proto.stargate.ColumnSpec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.stargate.ColumnSpec, 1));
};


/**
 * @param {!Array<!proto.stargate.ColumnSpec>} value
 * @return {!proto.stargate.ResultSet} returns this
*/
proto.stargate.ResultSet.prototype.setColumnsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.stargate.ColumnSpec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.stargate.ColumnSpec}
 */
proto.stargate.ResultSet.prototype.addColumns = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.stargate.ColumnSpec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.stargate.ResultSet} returns this
 */
proto.stargate.ResultSet.prototype.clearColumnsList = function() {
  return this.setColumnsList([]);
};


/**
 * repeated Row rows = 2;
 * @return {!Array<!proto.stargate.Row>}
 */
proto.stargate.ResultSet.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.stargate.Row>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.stargate.Row, 2));
};


/**
 * @param {!Array<!proto.stargate.Row>} value
 * @return {!proto.stargate.ResultSet} returns this
*/
proto.stargate.ResultSet.prototype.setRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.stargate.Row=} opt_value
 * @param {number=} opt_index
 * @return {!proto.stargate.Row}
 */
proto.stargate.ResultSet.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.stargate.Row, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.stargate.ResultSet} returns this
 */
proto.stargate.ResultSet.prototype.clearRowsList = function() {
  return this.setRowsList([]);
};


/**
 * optional google.protobuf.BytesValue paging_state = 3;
 * @return {?proto.google.protobuf.BytesValue}
 */
proto.stargate.ResultSet.prototype.getPagingState = function() {
  return /** @type{?proto.google.protobuf.BytesValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BytesValue, 3));
};


/**
 * @param {?proto.google.protobuf.BytesValue|undefined} value
 * @return {!proto.stargate.ResultSet} returns this
*/
proto.stargate.ResultSet.prototype.setPagingState = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.ResultSet} returns this
 */
proto.stargate.ResultSet.prototype.clearPagingState = function() {
  return this.setPagingState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.ResultSet.prototype.hasPagingState = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.BatchQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.BatchQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.BatchQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.BatchQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    cql: jspb.Message.getFieldWithDefault(msg, 1, ""),
    values: (f = msg.getValues()) && proto.stargate.Values.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.BatchQuery}
 */
proto.stargate.BatchQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.BatchQuery;
  return proto.stargate.BatchQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.BatchQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.BatchQuery}
 */
proto.stargate.BatchQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCql(value);
      break;
    case 2:
      var value = new proto.stargate.Values;
      reader.readMessage(value,proto.stargate.Values.deserializeBinaryFromReader);
      msg.setValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.BatchQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.BatchQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.BatchQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.BatchQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCql();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValues();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.stargate.Values.serializeBinaryToWriter
    );
  }
};


/**
 * optional string cql = 1;
 * @return {string}
 */
proto.stargate.BatchQuery.prototype.getCql = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.stargate.BatchQuery} returns this
 */
proto.stargate.BatchQuery.prototype.setCql = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Values values = 2;
 * @return {?proto.stargate.Values}
 */
proto.stargate.BatchQuery.prototype.getValues = function() {
  return /** @type{?proto.stargate.Values} */ (
    jspb.Message.getWrapperField(this, proto.stargate.Values, 2));
};


/**
 * @param {?proto.stargate.Values|undefined} value
 * @return {!proto.stargate.BatchQuery} returns this
*/
proto.stargate.BatchQuery.prototype.setValues = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.BatchQuery} returns this
 */
proto.stargate.BatchQuery.prototype.clearValues = function() {
  return this.setValues(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.BatchQuery.prototype.hasValues = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.BatchParameters.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.BatchParameters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.BatchParameters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.BatchParameters.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyspace: (f = msg.getKeyspace()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    consistency: (f = msg.getConsistency()) && proto.stargate.ConsistencyValue.toObject(includeInstance, f),
    tracing: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_wrappers_pb.Int64Value.toObject(includeInstance, f),
    serialConsistency: (f = msg.getSerialConsistency()) && proto.stargate.ConsistencyValue.toObject(includeInstance, f),
    nowInSeconds: (f = msg.getNowInSeconds()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f),
    tracingConsistency: (f = msg.getTracingConsistency()) && proto.stargate.ConsistencyValue.toObject(includeInstance, f),
    skipMetadata: jspb.Message.getBooleanFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.BatchParameters}
 */
proto.stargate.BatchParameters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.BatchParameters;
  return proto.stargate.BatchParameters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.BatchParameters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.BatchParameters}
 */
proto.stargate.BatchParameters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setKeyspace(value);
      break;
    case 2:
      var value = new proto.stargate.ConsistencyValue;
      reader.readMessage(value,proto.stargate.ConsistencyValue.deserializeBinaryFromReader);
      msg.setConsistency(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTracing(value);
      break;
    case 4:
      var value = new google_protobuf_wrappers_pb.Int64Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int64Value.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 5:
      var value = new proto.stargate.ConsistencyValue;
      reader.readMessage(value,proto.stargate.ConsistencyValue.deserializeBinaryFromReader);
      msg.setSerialConsistency(value);
      break;
    case 6:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setNowInSeconds(value);
      break;
    case 7:
      var value = new proto.stargate.ConsistencyValue;
      reader.readMessage(value,proto.stargate.ConsistencyValue.deserializeBinaryFromReader);
      msg.setTracingConsistency(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSkipMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.BatchParameters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.BatchParameters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.BatchParameters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.BatchParameters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyspace();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getConsistency();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.stargate.ConsistencyValue.serializeBinaryToWriter
    );
  }
  f = message.getTracing();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_wrappers_pb.Int64Value.serializeBinaryToWriter
    );
  }
  f = message.getSerialConsistency();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.stargate.ConsistencyValue.serializeBinaryToWriter
    );
  }
  f = message.getNowInSeconds();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
  f = message.getTracingConsistency();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.stargate.ConsistencyValue.serializeBinaryToWriter
    );
  }
  f = message.getSkipMetadata();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional google.protobuf.StringValue keyspace = 1;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.stargate.BatchParameters.prototype.getKeyspace = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 1));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.stargate.BatchParameters} returns this
*/
proto.stargate.BatchParameters.prototype.setKeyspace = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.BatchParameters} returns this
 */
proto.stargate.BatchParameters.prototype.clearKeyspace = function() {
  return this.setKeyspace(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.BatchParameters.prototype.hasKeyspace = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ConsistencyValue consistency = 2;
 * @return {?proto.stargate.ConsistencyValue}
 */
proto.stargate.BatchParameters.prototype.getConsistency = function() {
  return /** @type{?proto.stargate.ConsistencyValue} */ (
    jspb.Message.getWrapperField(this, proto.stargate.ConsistencyValue, 2));
};


/**
 * @param {?proto.stargate.ConsistencyValue|undefined} value
 * @return {!proto.stargate.BatchParameters} returns this
*/
proto.stargate.BatchParameters.prototype.setConsistency = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.BatchParameters} returns this
 */
proto.stargate.BatchParameters.prototype.clearConsistency = function() {
  return this.setConsistency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.BatchParameters.prototype.hasConsistency = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool tracing = 3;
 * @return {boolean}
 */
proto.stargate.BatchParameters.prototype.getTracing = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.stargate.BatchParameters} returns this
 */
proto.stargate.BatchParameters.prototype.setTracing = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional google.protobuf.Int64Value timestamp = 4;
 * @return {?proto.google.protobuf.Int64Value}
 */
proto.stargate.BatchParameters.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Int64Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int64Value, 4));
};


/**
 * @param {?proto.google.protobuf.Int64Value|undefined} value
 * @return {!proto.stargate.BatchParameters} returns this
*/
proto.stargate.BatchParameters.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.BatchParameters} returns this
 */
proto.stargate.BatchParameters.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.BatchParameters.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ConsistencyValue serial_consistency = 5;
 * @return {?proto.stargate.ConsistencyValue}
 */
proto.stargate.BatchParameters.prototype.getSerialConsistency = function() {
  return /** @type{?proto.stargate.ConsistencyValue} */ (
    jspb.Message.getWrapperField(this, proto.stargate.ConsistencyValue, 5));
};


/**
 * @param {?proto.stargate.ConsistencyValue|undefined} value
 * @return {!proto.stargate.BatchParameters} returns this
*/
proto.stargate.BatchParameters.prototype.setSerialConsistency = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.BatchParameters} returns this
 */
proto.stargate.BatchParameters.prototype.clearSerialConsistency = function() {
  return this.setSerialConsistency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.BatchParameters.prototype.hasSerialConsistency = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Int32Value now_in_seconds = 6;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.stargate.BatchParameters.prototype.getNowInSeconds = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 6));
};


/**
 * @param {?proto.google.protobuf.Int32Value|undefined} value
 * @return {!proto.stargate.BatchParameters} returns this
*/
proto.stargate.BatchParameters.prototype.setNowInSeconds = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.BatchParameters} returns this
 */
proto.stargate.BatchParameters.prototype.clearNowInSeconds = function() {
  return this.setNowInSeconds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.BatchParameters.prototype.hasNowInSeconds = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ConsistencyValue tracing_consistency = 7;
 * @return {?proto.stargate.ConsistencyValue}
 */
proto.stargate.BatchParameters.prototype.getTracingConsistency = function() {
  return /** @type{?proto.stargate.ConsistencyValue} */ (
    jspb.Message.getWrapperField(this, proto.stargate.ConsistencyValue, 7));
};


/**
 * @param {?proto.stargate.ConsistencyValue|undefined} value
 * @return {!proto.stargate.BatchParameters} returns this
*/
proto.stargate.BatchParameters.prototype.setTracingConsistency = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.BatchParameters} returns this
 */
proto.stargate.BatchParameters.prototype.clearTracingConsistency = function() {
  return this.setTracingConsistency(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.BatchParameters.prototype.hasTracingConsistency = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool skip_metadata = 8;
 * @return {boolean}
 */
proto.stargate.BatchParameters.prototype.getSkipMetadata = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.stargate.BatchParameters} returns this
 */
proto.stargate.BatchParameters.prototype.setSkipMetadata = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.stargate.Batch.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.stargate.Batch.prototype.toObject = function(opt_includeInstance) {
  return proto.stargate.Batch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.stargate.Batch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Batch.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    queriesList: jspb.Message.toObjectList(msg.getQueriesList(),
    proto.stargate.BatchQuery.toObject, includeInstance),
    parameters: (f = msg.getParameters()) && proto.stargate.BatchParameters.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.stargate.Batch}
 */
proto.stargate.Batch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.stargate.Batch;
  return proto.stargate.Batch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.stargate.Batch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.stargate.Batch}
 */
proto.stargate.Batch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.stargate.Batch.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new proto.stargate.BatchQuery;
      reader.readMessage(value,proto.stargate.BatchQuery.deserializeBinaryFromReader);
      msg.addQueries(value);
      break;
    case 3:
      var value = new proto.stargate.BatchParameters;
      reader.readMessage(value,proto.stargate.BatchParameters.deserializeBinaryFromReader);
      msg.setParameters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.stargate.Batch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.stargate.Batch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.stargate.Batch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.stargate.Batch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getQueriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.stargate.BatchQuery.serializeBinaryToWriter
    );
  }
  f = message.getParameters();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.stargate.BatchParameters.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.stargate.Batch.Type = {
  LOGGED: 0,
  UNLOGGED: 1,
  COUNTER: 2
};

/**
 * optional Type type = 1;
 * @return {!proto.stargate.Batch.Type}
 */
proto.stargate.Batch.prototype.getType = function() {
  return /** @type {!proto.stargate.Batch.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.stargate.Batch.Type} value
 * @return {!proto.stargate.Batch} returns this
 */
proto.stargate.Batch.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * repeated BatchQuery queries = 2;
 * @return {!Array<!proto.stargate.BatchQuery>}
 */
proto.stargate.Batch.prototype.getQueriesList = function() {
  return /** @type{!Array<!proto.stargate.BatchQuery>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.stargate.BatchQuery, 2));
};


/**
 * @param {!Array<!proto.stargate.BatchQuery>} value
 * @return {!proto.stargate.Batch} returns this
*/
proto.stargate.Batch.prototype.setQueriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.stargate.BatchQuery=} opt_value
 * @param {number=} opt_index
 * @return {!proto.stargate.BatchQuery}
 */
proto.stargate.Batch.prototype.addQueries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.stargate.BatchQuery, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.stargate.Batch} returns this
 */
proto.stargate.Batch.prototype.clearQueriesList = function() {
  return this.setQueriesList([]);
};


/**
 * optional BatchParameters parameters = 3;
 * @return {?proto.stargate.BatchParameters}
 */
proto.stargate.Batch.prototype.getParameters = function() {
  return /** @type{?proto.stargate.BatchParameters} */ (
    jspb.Message.getWrapperField(this, proto.stargate.BatchParameters, 3));
};


/**
 * @param {?proto.stargate.BatchParameters|undefined} value
 * @return {!proto.stargate.Batch} returns this
*/
proto.stargate.Batch.prototype.setParameters = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.stargate.Batch} returns this
 */
proto.stargate.Batch.prototype.clearParameters = function() {
  return this.setParameters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.stargate.Batch.prototype.hasParameters = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.stargate.Consistency = {
  ANY: 0,
  ONE: 1,
  TWO: 2,
  THREE: 3,
  QUORUM: 4,
  ALL: 5,
  LOCAL_QUORUM: 6,
  EACH_QUORUM: 7,
  SERIAL: 8,
  LOCAL_SERIAL: 9,
  LOCAL_ONE: 10
};

goog.object.extend(exports, proto.stargate);
